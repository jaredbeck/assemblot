---
arena:
  height: 200
  width: 200
bot_attributes:
- name: clock speed
  description: cpu instructions per tick
  min: 1
  max: 10
  cost: 1
- name: generator
  description: power produced per tick
  min: 0
  max: 10
  cost: 1
- name: max. shield
  description: shields fade
  min: 0
  max: 10
  cost: 1
cpu:
  instructions:
    acl:
      description: accelerate by specified x,y arguments
    add:
      description: first arg is a register, to which value of second arg is added
    and:
      description: bitwise logical and into register specified by first arg
    cmp:
      description: compare values by subtraction, save result in register c
    je:
      description: >
        Jump to given label if the previous cmp was equal (ie. the value of 
        register c is 0)
    jle:
      description: >
        Jump to given label if the previous cmp was less-than or equal (ie. the
        value of register c is zero or negative)
    jmp:
      description: Jump to given label unconditionally
    jnz:
      description: Jump if ZF == 0
    mov:
      description: move value to register
    neg:
      description: negate value in register
    or:
      description: bitwise logical or into register specified by first arg
    rnd:
      description: >
        Replace the specified register's value with a random number between 0
        and its current value.
    setnz:
      description: Set the specified register to 1 if ZF == 0
    sub:
      description: first arg is a register, from which value of second arg is subtracted
    test:
      description: https://en.wikipedia.org/wiki/TEST_(x86_instruction)
  registers:
    a:
      name: General register A
    b:
      name: General register B
    pf:
      name: Parity flag
      description: >
        In x86 processors, the parity flag .. is set if the number of set bits of
        ones is even (put another way, the parity bit is set if the sum of the
        bits is even).
      write: false
    sf:
      name: Sign flag
      description: set to 1 if last op result was negative, else 0
      write: false
    vx:
      name: Velocity, X
      description: current velocity, distance per tick, x-axis component
      write: false
    vy:
      name: Velocity, Y
      description: current velocity, distance per tick, y-axis component
      write: false
    wx:
      name: Wall, X
      description: the location, on the x-axis, of the right side of the arena
      write: false
    wy:
      name: Wall, Y
      description: the location, on the y-axis, of the top of the arena
      write: false
    x:
      name: Position, X
      description: current bot position, X
      write: false
    y:
      name: Position, Y
      description: current bot position, Y
      write: false
    zf:
      name: Zero flag
      description: >
        Set to 1 if last op result was 0. Used by many instructions like jz, jnz
      write: false
rules:
  shield_fade: 1
