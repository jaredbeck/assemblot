---
name: Basic
description: Basic movement avoids walls
atrs:
  clock_speed: 10
code: |+
  main: # If stationary, accelerate
  mov 0 a
  add a vx
  add a vy
  cmp a 0
  je staticacltest
  
  # Look for wall collision, brake
  scan:
  
  mov x a
  sub a 10 # if within 10 of left wall, then SF will be 1
  mov sf a
  cmp vx 0 # if velocity x is zero, then ZF will be 1
  setnz b
  and a b # if near (1), and has velocity (1), then ZF will be 0
  jnz brakex
  
  mov wx a
  sub a x # distance to right wall
  sub a 10
  mov sf a
  cmp vx 0
  setnz b
  and a b
  jnz brakex
  
  mov y a
  sub a 10
  mov sf a
  cmp vy 0
  setnz b
  and a b
  jnz brakey
  
  mov wy a
  sub a y
  sub a 10
  mov sf a
  cmp vy 0
  setnz b
  and a b
  jnz brakey
  
  jmp scan
  
  brakex:
  mov vx a
  neg a
  acl a 0
  jmp scan
  
  brakey:
  mov vy a
  neg a
  acl 0 a
  jmp scan
  
  # Accelerate randomly
  rndacl:
  mov 3 a
  rnd a
  mov 3 b
  rnd b
  acl a b
  jmp scan

  # Accelerate in a known direction, for testing
  staticacltest:
  acl 0 -2
  jmp scan
